name: supabase-db-backup
on:
  schedule:
    - cron: "0 17 * * *"   # 24:00 WIB (UTC+7)
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    permissions: 
      contents: read
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      BACKUP_BUCKET: db-backups
    steps:
      - uses: actions/checkout@v4

      - uses: supabase/setup-cli@v1
        with: 
          version: latest

      - name: Prepare
        run: |
          set -e
          mkdir -p backup_out
          echo "TS_UTC=$(date -u +'%Y-%m-%dT%H-%M-%SZ')" >> $GITHUB_ENV
          echo "DAY_WIB=$(date -u -d '+7 hours' +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "Now UTC: $(date -u)"
          echo "Now WIB: $(date -u -d '+7 hours')"

      - name: Dump roles
        run: supabase db dump --db-url "$SUPABASE_DB_URL" -f backup_out/roles.sql --role-only

      - name: Dump schema
        run: supabase db dump --db-url "$SUPABASE_DB_URL" -f backup_out/schema.sql

      - name: Dump data (COPY)
        run: supabase db dump --db-url "$SUPABASE_DB_URL" -f backup_out/data.sql --data-only --use-copy

      - name: Verify dumps exist
        run: |
          ls -lh backup_out
          test -f backup_out/roles.sql
          test -f backup_out/schema.sql
          test -f backup_out/data.sql
          
      - name: Compress
        run: |
          FILE="supabase-backup-${TS_UTC}.tar.gz"
          tar -czf "backup_out/$FILE" -C backup_out roles.sql schema.sql data.sql
          echo "FILE=$FILE" >> $GITHUB_ENV

      - name: Upload to Supabase Storage
        run: |
          set -euo pipefail
          DEST="daily/${DAY_WIB}/${FILE}"
          echo "Uploading backup_out/${FILE} -> ${BACKUP_BUCKET}/${DEST}"
          curl --fail --silent --show-error -X POST \
            "${SUPABASE_URL}/storage/v1/object/${BACKUP_BUCKET}/${DEST}" \
            -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
            -H "x-upsert: true" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"backup_out/${FILE}"
          echo "Uploaded to ${BACKUP_BUCKET}/${DEST}"
